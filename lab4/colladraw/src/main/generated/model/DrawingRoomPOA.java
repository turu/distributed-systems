package model;


/**
* model/DrawingRoomPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from api.idl
* Tuesday, May 6, 2014 12:57:50 AM CEST
*/

public abstract class DrawingRoomPOA extends org.omg.PortableServer.Servant
 implements model.DrawingRoomOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("getPainters", new java.lang.Integer (0));
    _methods.put ("join", new java.lang.Integer (1));
    _methods.put ("leave", new java.lang.Integer (2));
    _methods.put ("getDrawingBoard", new java.lang.Integer (3));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // model/DrawingRoom/getPainters
       {
         model.PainterToken $result[] = null;
         $result = this.getPainters ();
         out = $rh.createReply();
         model.PainterTokenSeqHelper.write (out, $result);
         break;
       }

       case 1:  // model/DrawingRoom/join
       {
         try {
           model.Painter painter = model.PainterHelper.read (in);
           this.join (painter);
           out = $rh.createReply();
         } catch (model.exceptions.RoomEnteringException $ex) {
           out = $rh.createExceptionReply ();
           model.exceptions.RoomEnteringExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 2:  // model/DrawingRoom/leave
       {
         try {
           model.PainterToken painterToken = model.PainterTokenHelper.read (in);
           this.leave (painterToken);
           out = $rh.createReply();
         } catch (model.exceptions.NoSuchPlayerInTheRoomException $ex) {
           out = $rh.createExceptionReply ();
           model.exceptions.NoSuchPlayerInTheRoomExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 3:  // model/DrawingRoom/getDrawingBoard
       {
         model.DrawingBoard $result = null;
         $result = this.getDrawingBoard ();
         out = $rh.createReply();
         model.DrawingBoardHelper.write (out, $result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:model/DrawingRoom:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public DrawingRoom _this() 
  {
    return DrawingRoomHelper.narrow(
    super._this_object());
  }

  public DrawingRoom _this(org.omg.CORBA.ORB orb) 
  {
    return DrawingRoomHelper.narrow(
    super._this_object(orb));
  }


} // class DrawingRoomPOA
